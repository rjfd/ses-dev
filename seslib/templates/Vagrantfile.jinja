# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.ssh.insert_key = false
  config.vm.box = "{{ vagrant_box }}"

  config.vm.provider "libvirt" do |lv|
{% if libvirt_host %}
    lv.host = {{ libvirt_host }}
{% endif %}
{% if libvirt_user %}
    lv.username = {{ libvirt_user }}
{% endif %}
{% if libvirt_use_ssl %}
    lv.connect_via_ssh = {{ libvirt_use_ssl }}
{% endif %}

    lv.memory = {{ ram }}
    lv.cpus = {{ cpus }}
{% if libvirt_storage_pool %}
    lv.storage_pool_name = {{ libvirt_storage_pool }}
{% endif %}

    lv.nic_model_type = "e1000"
    lv.cpu_mode = 'host-passthrough'
  end

{% for node in nodes %}
  config.vm.define :"{{ node.name }}" do |node|
    node.vm.network :private_network, ip: "{{ node.public_address }}"
{% if node.cluster_address %}
    node.vm.network :private_network, ip: "{{ node.cluster_address }}"
{% endif %}

    node.vm.provision "file", source: "keys/id_rsa",
                              destination:".ssh/id_rsa"
    node.vm.provision "file", source: "keys/id_rsa.pub",
                              destination:".ssh/id_rsa.pub"

{% if node == admin %}
    node.vm.provision "file", source: "keys/iscsi-gateway.crt",
                              destination:"server.crt"
    node.vm.provision "file", source: "keys/iscsi-gateway.key",
                              destination:"server.key"

    node.vm.provision "file", source: "bin/", destination:"/home/vagrant/"
{% endif %}

    node.vm.synced_folder ".", "/vagrant", disabled: true

{% for disk in node.storage_disks %}
    lv.storage :file, size: {{ disk.size }}, type: 'qcow2'
{% endfor %}

    node.vm.provision "shell", inline: <<-SHELL

    SHELL

    node.vm.provision "shell", inline: <<-SHELL
{% for _node in nodes %}
      echo "{{ _node.public_address }} {{ _node.name }} {{ _node.fqdn }}" >> /etc/hosts
{% endfor %}

      zypper -n install vim git iputils hostname jq make

{% for repo in node.repos %}
      zypper ar {{ repo.url }} {{ repo.name }}
{% if repo.priority %}
      zypper mr -p {{ repo.priority }} {{ repo.name }}
{% endif %}
{% endfor %}
      zypper --gpg-auto-import-keys ref

      cat /home/vagrant/.ssh/id_rsa.pub >> /home/vagrant/.ssh/authorized_keys
      [ ! -e "/root/.ssh" ] && mkdir /root/.ssh
      chmod 600 /home/vagrant/.ssh/id_rsa
      cp /home/vagrant/.ssh/id_rsa* /root/.ssh/
      cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
      hostnamectl set-hostname {{ node.name }}

      zypper -n install salt-minion
      sed -i 's/^#master:.*/master: {{ admin.name }}/g' /etc/salt/minion
      systemctl enable salt-minion
      systemctl start salt-minion
      touch /tmp/ready

{% if node == admin %}
      zypper -n install salt-master
      systemctl enable salt-master
      systemctl start salt-master
      sleep 10

      while : ; do
        PROVISIONED_NODES=`ls -l /tmp/ready-* 2>/dev/null | wc -l`
        echo "waiting for nodes (${PROVISIONED_NODES}/{{ nodes|length }})";
        [[ "${PROVISIONED_NODES}" != "{{ nodes|length }}" ]] || break
        sleep 2;
{% for node in nodes %}
        scp -o StrictHostKeyChecking=no {{ node.name }}:/tmp/ready /tmp/ready-{{ node.name }};
{% endfor %}
      done

      sleep 10
      salt-key -Ay
      sleep 5
{% endif %}
    SHELL

  end
{% endfor %}
end
